# Lesson_02.EX02
# *Реализовать структуру данных «Товары».
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
#     (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#     (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#     (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах.
# Пример:
# {
#     “название”: [“компьютер”, “принтер”, “сканер”],
#     “цена”: [20000, 6000, 2000],
#      “количество”: [5, 2, 7],
#      “ед”: [“шт.”]
#  }

goo_lis = list()
specs = ["Название: ", "Цена: ", "Кол-во: ", "ед. изм.: "]
i = s = 0
while s != "s" or s != "S":
    i += 1
    print("Заносим", i, "-й товар. ")
    globals()["x" + str(i)] = (
        i, {specs[0]: input(specs[0]), specs[1]: input(specs[1]), specs[2]: input(specs[2]), specs[3]: input(specs[3])})
        # я сломал голову, в тщетной попытке сделать наполнение словарей, таким образом, чтобы было универсально,
        # т.к... наследственность, ссылочность и всё такое.
        # по этому нашёл такой вариант - создавать под каждый словарь свою переменную, определяя её название счётчиком ☺
    s = input(
        "Вы успешно внесли данные по товару \nЕсли хотите продолжить набивать данные - введите любой символ. "
        "\n Для ОСТАНОВКИ - введите s:  ")
    n = i
    if s == "s" or s == "S":
        break
for i in range(n):
    tuple((globals()["x" + str(i + 1)]))
    goo_lis.append(globals()["x" + str(i + 1)])

print("Созданный массив данных выглядит следующим образом:   \n", goo_lis)

dic_new = {}
lis_name = []
lis_price = []
lis_qty = []
lis_unit = []

for i in range(len(goo_lis)):
    x = (goo_lis[i])
    y = x[1]

    lis_name.append(y[specs[0]])
    lis_price.append(y[specs[1]])
    lis_qty.append(y[specs[2]])
    lis_unit.append(y[specs[3]])
    lis_unit = set(lis_unit)
    lis_unit = list(lis_unit)
    dic_new[specs[0]] = lis_name
    dic_new[specs[1]] = lis_price
    dic_new[specs[2]] = lis_qty
    dic_new[specs[3]] = lis_unit

print("Tоварная аналитика будет выглядеть следующим образом:\n")
print(dic_new)